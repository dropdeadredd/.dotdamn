#!/usr/bin/env bash
#
#  ╔═════════════╗ drop 󰚌 Redd's ═════════ *
#  ║   ▄█████▄   ║ ╔╦═╗╔═╗╔╦╗╔╦═╗╔═╗╔╦╗╔╗╔ ║    
#  ║  ▄███████▄  ║  ║ ║║ ║ ║  ║ ║║ ║║║║║║║ ║    
#  ║  ██  █  ██  ║  ║ ║║ ║ ║  ║ ║╠═╣║║║║║║ ║    
#  ║   ███████   ║  ║ ║║ ║ ║  ║ ║║ ║║║║║║║ ║    
#  ║    █ █ █    ║ ═╩═╝╚═╝ ╩ ═╩═╝╩ ╩╩ ╩╝╚╝ ║     
#  ╚═════════════╝ ══════════════ DOTFILES *    
#  https://github.com/dropdeadredd/.dotdamn    

#  ╔═╗═╗ ╦╔╦╗╔═╗╦═╗╔╗╔╔═╗╦    ╦═╗╦ ╦╦  ╔═╗╔═╗
#  ║╣ ╔╩╦╝ ║ ║╣ ╠╦╝║║║╠═╣║    ╠╦╝║ ║║  ║╣ ╚═╗
#  ╚═╝╩ ╚═ ╩ ╚═╝╩╚═╝╚╝╩ ╩╩═╝  ╩╚═╚═╝╩═╝╚═╝╚═╝
#  url: https://github.com/dropdeadredd/.dotdamn

wid=$1
class=$2
instance=$3
consequences=$4

main () {
case "$class" in
	FloaTerm)
		eval "$consequences"
		[ "$state" ] || echo "state=floating center=on"
		;;
	Updating)
		eval "$consequences"
		[ "$state" ] || echo "state=floating sticky=on center=on"
		;;
	Viewnior)
	    eval "$consequences"
	    [ "$state" ] || echo "state=floating focus=on center=on"
		;;
	krita)
	    eval "$consequences"
	    [ "$state" ] || echo "state=pseudo_tiled desktop=^4 follow=on center=on"
		;;
	scrcpy)
		eval "$consequences"
		[ "$state" ] || echo "state=floating follow=on desktop=^6 center=on sticky=on"
		;;
	Pavucontrol)
	    eval "$consequences"
	    [ "$state" ] || echo "state=floating center=on"
	    ;;
	code)
	    eval "$consequences"
	    [ "$state" ] || echo "state=pseudo_tiled desktop=^1 follow=on center=on"
	    ;;
	thunar)
	    eval "$consequences"
	    [ "$state" ] || echo "state=pseudo_tiled desktop=focused rectangle=966x576+0+0 follow=on"
	    ;;
	floorp|Navigator)
	    eval "$consequences"
	    [ "$state" ] || echo "desktop=^3 follow=on"
	    ;;
	tdrop)
	    eval "$consequences"
	    [ "$state" ] || echo "desktop=focused follow=on"
	    ;;
	Spotify)
		eval "$consequences"
	    [ "$state" ] || echo "state=pseudo_tiled rectangle=1125x600 desktop=^9 follow=on"
		;;
		"") ## spotify hack
        sleep 0.5
		wm_class=( $(xprop -id "$wid" | grep "WM_CLASS" | grep -Po '"\K[^,"]+') )
		class=${wm_class[-1]}
		[[ ${#wm_class[@]} == "2" ]] && instance=${wm_class[0]}
		[[ -n "$class" ]] && main
		;;
esac
}

main
case "$instance" in
     Toolkit)
        eval "$consequences"
        [ "$state" ] || echo "state=floating sticky=on rectangle=500x290+1054+593"
	    ;;
esac  
